@model IEnumerable<QnyWeb.Models.ReceivingNoteItemView>
@{
    ViewBag.Title = "ReceivingNote";
}

<h2>ReceivingNote</h2>
<p>@{var cdate = Model != null && Model.Any() && Model.FirstOrDefault().cDate.HasValue ? Model.FirstOrDefault().cDate.Value.ToString("yyyy-MM-dd") : string.Empty;}</p>
<p>Date: <input type="text" id="date" value="@cdate"><button id="searchButton">Search</button></p>
<p></p>
<p></p>
出货日期:<b>@cdate</b>
<form method="post">
    <input type="hidden" id="cDate" name="cDate" value="@cdate" />
    <input type="hidden" id="item_PaymentStatus" name="item.PaymentStatus" />
    <table class="table">
        <tr>
            <th>
                SkuId
            </th>
            <th>
                商品名称
            </th>
            <th>
                规格
            </th>
            <th>
                单位
            </th>
            <th>
                订单数量
            </th>
            <th>
                采购数量
            </th>
            <th>
                采购单价
            </th>
            <th>
                采购金额
            </th>
            <th>
                对比价格
            </th>
            <th>
                对比毛利
            </th>
            <th>
                供货商
            </th>
            <th>
                付款状态
            </th>
        </tr>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.skuid)
                    @Html.HiddenFor(modelItem => item.skuid)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.spuName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.skuSpec)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.skuDictUnitName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.prePoAmount)
                </td>
                <td>
                    @Html.TextBoxFor(modelItem => item.Quantity, new { style = "width:50px" })
                </td>
                <td>
                    @Html.TextBoxFor(modelItem => item.UnitPrice, new { style = "width:50px" })
                </td>
                <td>
                    @Html.TextBoxFor(modelItem => item.TotalPrice, new { style = "width:50px" })
                </td>
                <td>
                    @Html.TextBoxFor(modelItem => item.ContrastPrice, new { style = "width:50px" })
                </td>
                <td>
                    @Html.TextBoxFor(modelItem => item.ContrastGrossProfit, new { style = "width:50px" })
                </td>
                <td>
                    @Html.TextBoxFor(modelItem => item.Supplier)
                </td>
                <td>
                    @Html.CheckBoxFor(modelItem => item.PaymentStatus.Value, new { style = "width:50px" })
                    @Html.HiddenFor(modelItem => item.RnId)
                </td>
            </tr>
        }

    </table>

    <input type="submit" value="submit" id="saveButton" />
</form>
<script>
    document.getElementById("searchButton").onclick = function () {
        var date = document.getElementById('date').value;
        url = '/Home/ReceivingNote?cDate=' + date;
        location.href = url;
    };
    document.getElementById("saveButton").onclick = function () {
        var suppliers = document.getElementsByName('item.Supplier');
        if (suppliers != null && suppliers.length > 0) {
            for (i = 0; i < suppliers.length; i++) {
                var value = suppliers[i].value;
                if (value != null && value != "") {
                    value = value.replace(/,/g, '');
                    suppliers[i].value = value;
                }
            }
        }

        var checkboxes = document.getElementsByName('item.PaymentStatus.Value');
        var paymentValue = document.getElementById('item_PaymentStatus').value;
        if (checkboxes != null && checkboxes.length > 0) {
            for (i = 0; i < checkboxes.length; i++) {
                if (checkboxes[i].attributes['type'].value == 'checkbox') {
                    paymentValue += checkboxes[i].checked + ',';
                }
            }
            document.getElementById('item_PaymentStatus').value = paymentValue;
            alert(document.getElementById('item_PaymentStatus').value)
        }

        if (!CheckNumber('item.Quantity') ||
            !CheckNumber('item.UnitPrice') ||
            !CheckNumber('item.TotalPrice') ||
            !CheckNumber('item.ContrastPrice') ||
            !CheckNumber('item.ContrastGrossProfit')) {
            return false;
        }
    };

    function CheckNumber(name) {
        var elements = document.getElementsByName(name);
        if (elements != null && elements.length > 0) {
            for (i = 0; i < elements.length; i++) {
                var value = elements[i].value;
                if (value != null && value != "" && isNaN(value)) {
                    elements[i].focus();
                    elements[i].select();
                    alert("plase input number!")
                    return false
                }
            }
        }
        return true;
    };
</script>